## 1. Data Cleaning & Transformation (Netflix Dataset)

- **Table Creation:** Create a cleaned version of the raw Netflix dataset.  
- **Handling Missing Values:**  
  - Replace `NULL` values in `Director`, `Cast`, and `Country` with `'Unknown'`.  
  - Standardize `Rating`:  
    - If `Rating` is `NULL` → `'Unknown'`  
    - Otherwise → convert to uppercase and replace spaces with hyphens.  
- **Date Processing:**  
  - Convert `Date_Added` to `DATE`.  
  - Extract the year from `Date_Added` as `Year_Added`.  
- **Duration Transformation:**  
  - Extract numeric values from `Duration`.  
  - Create two new fields:  
    - `Duration_Number` → numeric part (e.g., 90, 2).  
    - `Duration_Type` → whether it’s in *Minutes* or *Seasons*.  
- **Final Output:**  
  - Data is grouped by all key columns.  
  - Sorted by `Date_Added` in descending order.  

```sql
CREATE TABLE netflix_cleaned AS
SELECT
    Title,
    Type,
    COALESCE(Director, 'Unknown') AS Director,
    COALESCE(Cast, 'Unknown') AS Cast,
    COALESCE(Country, 'Unknown') AS Country,
    COALESCE(
        CASE 
            WHEN Rating IS NULL THEN 'Unknown'
            ELSE UPPER(TRIM(REPLACE(Rating, ' ', '-')))
        END,
        'Unknown'
    ) AS Rating,
    CAST(Date_Added AS DATE) AS Date_Added,
    EXTRACT(YEAR FROM CAST(Date_Added AS DATE)) AS Year_Added,
    Release_Year,
    Genre,
    CASE 
        WHEN Duration LIKE '%Season%' THEN CAST(SUBSTRING(Duration FROM '([0-9]+)') AS INT)
        WHEN Duration LIKE '%min%' THEN CAST(SUBSTRING(Duration FROM '([0-9]+)') AS INT)
        ELSE NULL
    END AS Duration_Number,
    CASE
        WHEN Duration LIKE '%Season%' THEN 'Seasons'
        WHEN Duration LIKE '%min%' THEN 'Minutes'
        ELSE NULL
    END AS Duration_Type
FROM netflix_raw
GROUP BY 
    Title, Type, Director, Cast, Country, Rating, Date_Added, Year_Added, Release_Year, Genre, Duration_Number, Duration_Type
ORDER BY Date_Added DESC;
